/*
 * Scolendar
 * UE Projet - L3 Informatique AMU 2019-2020 All of the routes missing the `role-professor` or `role-student` tags are meant for administrators only - as stated in their descriptions.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.13
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Scolendar);
  }
}(this, function(expect, Scolendar) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('TeacherResponseTeacherServices', function() {
      beforeEach(function() {
        instance = new Scolendar.TeacherResponseTeacherServices();
      });

      it('should create an instance of TeacherResponseTeacherServices', function() {
        // TODO: update the code to test TeacherResponseTeacherServices
        expect(instance).to.be.a(Scolendar.TeacherResponseTeacherServices);
      });

      it('should have the property _class (base name: "class")', function() {
        // TODO: update the code to test the property _class
        expect(instance).to.have.property('_class');
        // expect(instance._class).to.be(expectedValueLiteral);
      });

      it('should have the property cm (base name: "cm")', function() {
        // TODO: update the code to test the property cm
        expect(instance).to.have.property('cm');
        // expect(instance.cm).to.be(expectedValueLiteral);
      });

      it('should have the property project (base name: "project")', function() {
        // TODO: update the code to test the property project
        expect(instance).to.have.property('project');
        // expect(instance.project).to.be(expectedValueLiteral);
      });

      it('should have the property td (base name: "td")', function() {
        // TODO: update the code to test the property td
        expect(instance).to.have.property('td');
        // expect(instance.td).to.be(expectedValueLiteral);
      });

      it('should have the property tp (base name: "tp")', function() {
        // TODO: update the code to test the property tp
        expect(instance).to.have.property('tp');
        // expect(instance.tp).to.be(expectedValueLiteral);
      });

      it('should have the property administration (base name: "administration")', function() {
        // TODO: update the code to test the property administration
        expect(instance).to.have.property('administration');
        // expect(instance.administration).to.be(expectedValueLiteral);
      });

      it('should have the property external (base name: "external")', function() {
        // TODO: update the code to test the property external
        expect(instance).to.have.property('external');
        // expect(instance.external).to.be(expectedValueLiteral);
      });

    });
  });

}));
