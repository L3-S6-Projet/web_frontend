/*
 * Scolendar
 * UE Projet - L3 Informatique AMU 2019-2020 All of the routes missing the `role-professor` or `role-student` tags are meant for administrators only - as stated in their descriptions.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.13
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Scolendar) {
      root.Scolendar = {};
    }
    root.Scolendar.ErrorResponse = factory(root.Scolendar.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The ErrorResponse model module.
   * @module model/ErrorResponse
   * @version v1
   */

  /**
   * Constructs a new <code>ErrorResponse</code>.
   * @alias module:model/ErrorResponse
   * @class
   * @param status {String} 
   * @param code {module:model/ErrorResponse.CodeEnum} 
   */
  var exports = function(status, code) {
    this.status = status;
    this.code = code;
  };

  /**
   * Constructs a <code>ErrorResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ErrorResponse} obj Optional instance to populate.
   * @return {module:model/ErrorResponse} The populated <code>ErrorResponse</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('status'))
        obj.status = ApiClient.convertToType(data['status'], 'String');
      if (data.hasOwnProperty('code'))
        obj.code = ApiClient.convertToType(data['code'], 'String');
    }
    return obj;
  }

  /**
   * @member {String} status
   */
  exports.prototype.status = undefined;

  /**
   * @member {module:model/ErrorResponse.CodeEnum} code
   */
  exports.prototype.code = undefined;


  /**
   * Allowed values for the <code>code</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CodeEnum = {
    /**
     * value: "InvalidCredentials"
     * @const
     */
    invalidCredentials: "InvalidCredentials",

    /**
     * value: "InsufficientAuthorization"
     * @const
     */
    insufficientAuthorization: "InsufficientAuthorization",

    /**
     * value: "MalformedData"
     * @const
     */
    malformedData: "MalformedData",

    /**
     * value: "InvalidOldPassword"
     * @const
     */
    invalidOldPassword: "InvalidOldPassword",

    /**
     * value: "PasswordTooSimple"
     * @const
     */
    passwordTooSimple: "PasswordTooSimple",

    /**
     * value: "InvalidEmail"
     * @const
     */
    invalidEmail: "InvalidEmail",

    /**
     * value: "InvalidPhoneNumber"
     * @const
     */
    invalidPhoneNumber: "InvalidPhoneNumber",

    /**
     * value: "InvalidRank"
     * @const
     */
    invalidRank: "InvalidRank",

    /**
     * value: "InvalidID"
     * @const
     */
    invalidID: "InvalidID",

    /**
     * value: "InvalidCapacity"
     * @const
     */
    invalidCapacity: "InvalidCapacity",

    /**
     * value: "TeacherInCharge"
     * @const
     */
    teacherInCharge: "TeacherInCharge",

    /**
     * value: "ClassroomUsed"
     * @const
     */
    classroomUsed: "ClassroomUsed",

    /**
     * value: "InvalidLevel"
     * @const
     */
    invalidLevel: "InvalidLevel",

    /**
     * value: "ClassUsed"
     * @const
     */
    classUsed: "ClassUsed",

    /**
     * value: "StudentInClass"
     * @const
     */
    studentInClass: "StudentInClass",

    /**
     * value: "SubjectUsed"
     * @const
     */
    subjectUsed: "SubjectUsed",

    /**
     * value: "TeacherNotInCharge"
     * @const
     */
    teacherNotInCharge: "TeacherNotInCharge",

    /**
     * value: "LastTeacherInSubject"
     * @const
     */
    lastTeacherInSubject: "LastTeacherInSubject",

    /**
     * value: "LastGroupInSubject"
     * @const
     */
    lastGroupInSubject: "LastGroupInSubject",

    /**
     * value: "ClassroomAlreadyOccupied"
     * @const
     */
    classroomAlreadyOccupied: "ClassroomAlreadyOccupied",

    /**
     * value: "ClassOrGroupAlreadyOccupied"
     * @const
     */
    classOrGroupAlreadyOccupied: "ClassOrGroupAlreadyOccupied",

    /**
     * value: "InvalidOccupancyType"
     * @const
     */
    invalidOccupancyType: "InvalidOccupancyType",

    /**
     * value: "EndBeforeStart"
     * @const
     */
    endBeforeStart: "EndBeforeStart",

    /**
     * value: "TeacherDoesNotTeach"
     * @const
     */
    teacherDoesNotTeach: "TeacherDoesNotTeach",

    /**
     * value: "IllegalOccupancyType"
     * @const
     */
    illegalOccupancyType: "IllegalOccupancyType",

    /**
     * value: "TeacherAlreadyOccupied"
     * @const
     */
    teacherAlreadyOccupied: "TeacherAlreadyOccupied",

    /**
     * value: "Unknown"
     * @const
     */
    unknown: "Unknown"
  };

  return exports;

}));
