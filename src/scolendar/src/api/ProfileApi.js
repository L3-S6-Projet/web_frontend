/*
 * Scolendar
 * UE Projet - L3 Informatique AMU 2019-2020 All of the routes missing the `role-professor` or `role-student` tags are meant for administrators only - as stated in their descriptions.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.13
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ErrorResponse', 'model/ProfileUpdateRequest', 'model/SimpleSuccessResponse'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/ErrorResponse'), require('../model/ProfileUpdateRequest'), require('../model/SimpleSuccessResponse'));
  } else {
    // Browser globals (root is window)
    if (!root.Scolendar) {
      root.Scolendar = {};
    }
    root.Scolendar.ProfileApi = factory(root.Scolendar.ApiClient, root.Scolendar.ErrorResponse, root.Scolendar.ProfileUpdateRequest, root.Scolendar.SimpleSuccessResponse);
  }
}(this, function(ApiClient, ErrorResponse, ProfileUpdateRequest, SimpleSuccessResponse) {
  'use strict';

  /**
   * Profile service.
   * @module api/ProfileApi
   * @version v1
   */

  /**
   * Constructs a new ProfileApi. 
   * @alias module:api/ProfileApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the profilePut operation.
     * @callback module:api/ProfileApi~profilePutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SimpleSuccessResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the user model.
     * Should be accessible by every user.
     * @param {module:model/ProfileUpdateRequest} profileUpdateRequest 
     * @param {module:api/ProfileApi~profilePutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SimpleSuccessResponse}
     */
    this.profilePut = function(profileUpdateRequest, callback) {
      var postBody = profileUpdateRequest;

      // verify the required parameter 'profileUpdateRequest' is set
      if (profileUpdateRequest === undefined || profileUpdateRequest === null) {
        throw new Error("Missing the required parameter 'profileUpdateRequest' when calling profilePut");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['token'];
      var contentTypes = [];
      var accepts = [];
      var returnType = SimpleSuccessResponse;

      return this.apiClient.callApi(
        '/profile', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
